{"version":3,"sources":["assets/images/bg_cloud_blue.jpg","views/templates/topic-page/styles.tsx","views/templates/topic-page/index.tsx","views/devpage/styles.tsx","views/devpage/index.tsx"],"names":["module","exports","color","tokens","breakpoint","spacing","lightDefaultFontColor","natural","dark","lightHoverFontColor","blue","darkDefaultFontColor","darkHoverFontColor","defaultPageWrapperStyles","styled","section","m","tablet","ContentWrapper","div","attrs","className","ContentContainer","xxl","maize","PageWrapper","props","variant","css","bgBlue","light","TopicPage","children","font","PageHeader","header","weight","bold","size","l","ListStyles","ul","xl","DevPage","href"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,2C,uuDCInCC,EAA+BC,IAA/BD,MAAOE,EAAwBD,IAAxBC,WAAYC,EAAYF,IAAZE,QAErBC,EAAwBJ,EAAMK,QAAQC,KACtCC,EAAsBP,EAAMQ,KAC5BC,EAAuBT,EAAMK,QAAQC,KACrCI,EAAqBV,EAAMK,QAAQC,KAMnCK,EAA2BC,IAAOC,QAAV,IAKfV,EAAQW,EAEAZ,EAAWa,QAKrBC,EAAiBJ,IAAOK,IAAIC,MAAM,CAC7CC,UAAW,0DADiBP,CAAH,IAIZV,EAAWa,OAGHb,EAAWa,QAuBrBK,GAlBgBR,IAAOK,IAAV,IAOLd,EAAQkB,IAGNnB,EAAWa,QAQFH,IAAOK,IAAIC,MAAM,CAC/CC,UAAW,0DADmBP,CAAH,IAIXZ,EAAMsB,QAIXC,EAAcX,YAAOD,EAAPC,CAAH,KACpB,SAACY,GAAD,MACkB,QAAlBA,EAAMC,SACNC,YADA,IAE0BC,IAGtBP,EACSX,EAGoBC,MAKjC,SAACc,GAAD,MACkB,WAAlBA,EAAMC,SACNC,YADA,IAIM1B,EAAMK,QAAQuB,MAIhBR,EACSb,EAEYL,EAAWa,OACrBX,EAGEG,EAKkBA,MC9DxBsB,IAvBG,SAACL,GAA2B,IACpCM,EAAsBN,EAAtBM,SAAUL,EAAYD,EAAZC,QAElB,OACE,kBAACF,EAAD,CAAaE,QAASA,GACpB,kBAACT,EAAD,KAYE,kBAACI,EAAD,KAAmBU,O,2iBC/BnB5B,EAA8BD,IAA9BC,WAAY6B,EAAkB9B,IAAlB8B,KAAM5B,EAAYF,IAAZE,QAEb6B,EAAapB,IAAOqB,OAAV,IAWJF,EAAKG,OAAOC,KAENjC,EAAWa,OACjBgB,EAAKK,KAAKC,GAKhBC,EAAa1B,IAAO2B,GAAV,IAEJpC,EAAQqC,ICUZC,UA/BS,WACtB,OACE,kBAAC,IAAD,CAAWhB,QAAQ,OACjB,kBAACO,EAAD,KACE,sDACA,6KAOF,2BACE,4DAEF,kBAACM,EAAD,KACE,+CACA,4CACA,iEAGF,wDAC6B,IAC3B,uBAAGI,KAAK,oEAAR","file":"static/js/4.2572c0ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_cloud_blue.7572c4ce.jpg\";","import styled, { css } from \"styled-components\";\nimport { tokens } from \"../../../styles/tokens\";\nimport bgBlue from \"../../../assets/images/bg_cloud_blue.jpg\";\n\nconst { color, breakpoint, spacing } = tokens;\n\nconst lightDefaultFontColor = color.natural.dark;\nconst lightHoverFontColor = color.blue;\nconst darkDefaultFontColor = color.natural.dark;\nconst darkHoverFontColor = color.natural.dark;\n\ninterface TemplateProps {\n  variant: \"dev\" | \"coffee\";\n}\n\nconst defaultPageWrapperStyles = styled.section`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  overflow-x: hidden;\n  padding: 0 ${spacing.m};\n\n  @media (min-width: ${breakpoint.tablet}) {\n    padding: 0;\n  }\n`;\n\nexport const ContentWrapper = styled.div.attrs({\n  className: \"animate__animated animate__fadeInRight animate__slower\",\n})`\n  margin: auto;\n  max-width: ${breakpoint.tablet};\n  padding: 20% 0 10% 0;\n\n  @media (min-width: ${breakpoint.tablet}) {\n    padding: 0;\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  display: inline-block;\n\n  a {\n    display: flex;\n    width: auto;\n    height: auto;\n    padding-right: ${spacing.xxl};\n  }\n\n  @media (min-width: ${breakpoint.tablet}) {\n    :hover {\n      transform: translateX(-30%);\n      transition: all 0.2s ease;\n    }\n  }\n`;\n\nexport const ContentContainer = styled.div.attrs({\n  className: \"animate__animated animate__fadeInRight animate__slower\",\n})`\n  *::selection {\n    background: ${color.maize};\n  }\n`;\n\nexport const PageWrapper = styled(defaultPageWrapperStyles)<TemplateProps>`\n  ${(props) =>\n    props.variant === \"dev\" &&\n    css`\n      background-image: url(${bgBlue});\n      background-size: cover;\n\n      ${ContentContainer} {\n        color: ${darkDefaultFontColor};\n\n        a:hover {\n          border-bottom: 2px solid ${darkHoverFontColor};\n        }\n      }\n    `}\n\n  ${(props) =>\n    props.variant === \"coffee\" &&\n    css`\n      background: linear-gradient(\n        to top left,\n        ${color.natural.light} 75%,\n        transparent 25%\n      );\n\n      ${ContentContainer} {\n        color: ${lightHoverFontColor};\n\n        @media (min-width: ${breakpoint.tablet}) {\n          color: ${lightDefaultFontColor};\n\n          :hover {\n            color: ${lightHoverFontColor};\n            transition: all 0.3s ease;\n          }\n\n          a:hover {\n            border-bottom: 2px solid ${lightHoverFontColor};\n          }\n        }\n      }\n    `}\n`;\n","import React, { ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport chevronLeftLight from \"../../../assets/icons/chevron-left-light.svg\";\n\nimport {\n  PageWrapper,\n  ContentWrapper,\n  LinkContainer,\n  ContentContainer,\n} from \"./styles\";\n\ninterface TopicPageProps {\n  children: ReactNode;\n  variant: \"dev\" | \"coffee\";\n}\n\nconst TopicPage = (props: TopicPageProps) => {\n  const { children, variant } = props;\n\n  return (\n    <PageWrapper variant={variant}>\n      <ContentWrapper>\n        {/* <LinkContainer>\n          <Link to=\"/\">\n            <img\n              src={variant === \"dev\" ? chevronLeftLight : chevronLeftLight}\n              alt=\"back-button\"\n              width=\"28\"\n              height=\"28\"\n            />\n          </Link>\n        </LinkContainer> */}\n\n        <ContentContainer>{children}</ContentContainer>\n      </ContentWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default TopicPage;\n","import styled from \"styled-components\";\nimport { tokens } from \"../../styles/tokens\";\n\nconst { breakpoint, font, spacing } = tokens;\n\nexport const PageHeader = styled.header`\n  h1 {\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  p {\n    font-weight: ${font.weight.bold};\n\n    @media (min-width: ${breakpoint.tablet}) {\n      font-size: ${font.size.l};\n    }\n  }\n`;\n\nexport const ListStyles = styled.ul`\n  margin-top: -0.5rem;\n  margin-bottom: ${spacing.xl};\n  padding: 0;\n  list-style: none;\n`;\n","import React, { FC } from \"react\";\nimport TopicPage from \"../templates/topic-page\";\n\nimport { PageHeader, ListStyles } from \"./styles\";\n\nconst DevPage: FC<{}> = () => {\n  return (\n    <TopicPage variant=\"dev\">\n      <PageHeader>\n        <h1>Prototoype development</h1>\n        <p>\n          We design and build digital solutions to help forward-thinking\n          organisations bridge the gap between customers, business goals and\n          technology.\n        </p>\n      </PageHeader>\n\n      <p>\n        <strong>We specialise in â€”</strong>\n      </p>\n      <ListStyles>\n        <li>Web development</li>\n        <li>UI/UX design</li>\n        <li>Search engine optimisation (SEO)</li>\n      </ListStyles>\n\n      <p>\n        For enquiries, reach us at{\" \"}\n        <a href=\"mailto:dev@prototypes.sg?subject=Inquiry on development services\">\n          dev@prototypes.sg\n        </a>\n      </p>\n    </TopicPage>\n  );\n};\n\nexport default DevPage;\n"],"sourceRoot":""}